#!/usr/bin/env bash
# Copyright (C) 2021

function init() {
echo -e "Begin....."

# Check boot type bios or uefi
if [ -d /sys/firmware/efi ]; then
    UEFI=true
	echo "UEFI is present"
else
	BIOS=true
	echo "BIOS is present"
fi
# Check CPU
# Check virtual env
echo -e "Check virtual environment"
  case "$(systemd-detect-virt)" in
    oracle)
	echo "Oracle virtual box is present"
    virt="vbox"
    VM=true
    ;;
  vmware)
	echo "Vmware workstation is present"
    virt="vmware"
    VM=true
    ;;
  qemu)
    virt="qemu"
    echo "QUEMU is present"
    VM=true
    ;;
  kvm)
    virt="kvm"
    echo "kvm is present"
    VM=true
    ;;
  microsoft)
    virt="hyper-v"
    echo "microsoft hyper-v is present"
    VM=true
    ;;
  xen)
    virt="xen"
    echo "Xen is present"
    VM=true
    ;;
  esac

# Check for laptop
if [ -d /sys/class/power_supply/BAT0 ]; then
  Laptop=true
  echo -e "Laptop is present"
fi
# Check vga card vendor 
if ! "${VM}"; then
   if (lspci | grep VGA | grep "Intel" &>/dev/null); then
      default_GPU="xf86-video-intel"
      chipset="Intel"
   elif (lspci | grep VGA | grep "ATI\|AMD" &>/dev/null); then
      default_GPU="xf86-video-ati"
      chipset="AMD/ATI"
   elif (lspci | grep VGA | grep "NVIDIA\|nVidia" &>/dev/null); then
    NVIDIA=true default_GPU="xf86-video-nouveau"
    chipset="Nvidia"
  else
    default_GPU="xf86-video-vesa"
    chipset="Unknown"
  fi
fi

# Check if install media is USB
if (lsblk | grep "run" | grep -o "sd." &>/dev/null); then
  USB="$(lsblk | grep "run" | grep -o "sd.")"
  echo $USB
fi

# Check for bluetooth device
if (dmesg | grep -i "blue" &>/dev/null); then
  bluetooth=true
  echo -e "Bluetooth is present"
fi

echo -e "Start pseudographic setup"
}

function set_keyboard() {

lang=$(dialog  --backtitle "Uranus installer project" --title "Select a language" \
        --menu "Choose the language to be used to installation process.
        Language:" 20 51 4 \
        "Danish"     " -  Dansk    "   \
        "English"    " -  USA      "   \
        "Estonian"   " -  Eesti    "   \
        "French"     " -  Français "   \
        "Russian"    " -  Русский  " 3>&1 1>&2 2>&3)

case "$lang" in
   Danish)
    loadkeys dk-latin1
    ;;
   English)
    loadkeys us
    ;;
   Estonian)
    echo "Sloow cow"
    ;;
   French)
    loadkeys fr-latin1
    ;;
   Russian)
    loadkeys ru
    ;;
esac

}

function set_font() { 

dialog --clear --backtitle "$backtitle" --title "Set font" --msgbox "set font cyr-sun16" 0 0
setfont cyr-sun16

}

function set_locale() {

localelist="$(grep -E "^#?[a-z].*" /etc/locale.gen)"
 
tmpfile=$(mktemp /tmp/tempXXX.tmp)
 
while read -r line; do
eval $(echo "$line" | awk '{print "var1="$1";var2="$2}')
    fchar="${line:0:1}"
    sep="#"
    end="\\"
    if [ "$fchar" = "$sep" ];
    then
    prz="off"
    var3=$(echo "$var1" | grep -Po '^.{1}\K.*')
    str2=" \"$var3\" \"$var2\" $prz \\"
    echo $str2 >> tempXXX.tmp
    else
    prz="on"
    str3=" \"$var1\" \"$var2\" $prz \\"
    echo $str3 >> tempXXX.tmp
    fi
done <<< "$localelist"

locales=$(dialog --backtitle "$backtitle" --title "Do you want to" --checklist "Do you want to" 15 60 4 \
--file tempXXX.tmp 3>&1 1>&2 2>&3)

exitstatus=$?
if [ $exitstatus = 0 ]; then
    for locale in $locales
    do  
        sed -i -e "s/#${locale}/${locale}/"	/etc/locale.gen
    done
fi

locale-gen

rm tempXXX.tmp
}

function start() {
set_locale
set_font
set_keyboard

}


init
start
